<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JiraGit.Common</name>
    </assembly>
    <members>
        <member name="T:JiraGit.Common.Interfaces.IIdentifiable">
            <summary>
            Represents a displayable and identifiable thing within the issue tracking system.
            </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIdentifiable.Id">
            <summary> A unique identifier/name of the item </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIdentifiable.Name">
            <summary> The display name of the item </summary>
        </member>
        <member name="T:JiraGit.Common.Interfaces.TimeEstimateRecalcualationMethod">
            <summary>
             Defines method Jira will use to update Estimated time.
            </summary>
        </member>
        <member name="F:JiraGit.Common.Interfaces.TimeEstimateRecalcualationMethod.AdjustAutomatically">
            <summary>
            The estimate will be reduced by the amount of work done
            </summary>
        </member>
        <member name="F:JiraGit.Common.Interfaces.TimeEstimateRecalcualationMethod.DoNotChange">
            <summary>
            The stimate will not be changed
            </summary>
        </member>
        <member name="F:JiraGit.Common.Interfaces.TimeEstimateRecalcualationMethod.SetToNewValue">
            <summary>
            The new estimate will be set explicitly
            </summary>
        </member>
        <member name="T:JiraGit.Common.Interfaces.IIssue">
            <summary>
            Represents a single issue within an issue tracking system.
            </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssue.DisplayId">
            <summary> returns a human-readable identifier, can be == Id </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssue.FullDescription">
            <summary> Returns the complete detialed description of the item </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssue.CurrentState">
            <summary> Returns the current state of the item (i.e. open, closed, etc) </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssue.AssignedTo">
            <summary> Returns the current user this is assigned to </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssue.ReportedBy">
            <summary> Returns the user this was reported by </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssue.CreatedOn">
            <summary> Returns the date/time the issue was first reported </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssue.LastModifiedOn">
            <summary> Returns the date/time the issue was last updated </summary>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssue.View">
            <summary> View the current issue in the default user interface </summary>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssue.AddComment(System.String)">
            <summary> Adds a comment to this issue </summary>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssue.GetActions">
            <summary>
            Retieves the actions the current user could possible take on the issue (ie. fixed, closed, etc).
            </summary>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssue.ProcessAction(System.String,JiraGit.Common.Interfaces.IIssueAction,JiraGit.Common.Interfaces.IIssueUser)">
            <summary>
            Processes a given action against this issue
            </summary>
            <param name="comment"> A comment to append to the issue, or null/empty for none. </param>
            <param name="action"> The action to perform </param>
            <param name="assignTo"> A user to assign the issue to, or this.AssignedTo to leave it alone </param>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssue.ProcessWorklog(System.String,JiraGit.Common.Interfaces.TimeEstimateRecalcualationMethod,System.String,System.String)">
            <summary>
            Adds a worklog to given issue
            </summary>
            <param name="timeSpent">Spent time in Jira format</param>
            <param name="method"></param>
            <param name="newTimeEstimate"></param>
            <param name="comment"></param>
        </member>
        <member name="T:JiraGit.Common.Interfaces.IIssueAction">
            <summary>
            Represents an activity/action that can be performed on an issue
            </summary>
        </member>
        <member name="T:JiraGit.Common.Interfaces.IIssueFilter">
            <summary>
            Represents a group of displayable issues
            </summary>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssueFilter.GetIssues(System.Int32,System.Int32)">
            <summary>
            Returns the list of issues matching this filter/group
            </summary>
        </member>
        <member name="T:JiraGit.Common.Interfaces.IIssueFilterWithSearch">
            <summary>
            Represents a group of displayable issues
            </summary>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssueFilterWithSearch.GetIssues(System.String,System.Int32,System.Int32)">
            <summary>
            Returns the list of issues matching this filter/group
            </summary>
        </member>
        <member name="T:JiraGit.Common.Interfaces.IIssuesService">
            <summary>
            Connection to the main issue tracking service 
            </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssuesService.ServiceName">
            <summary>
            Returns the proper name of the system this plugin talks to, i.e. the name of the 
            issue tracking system
            </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssuesService.UriPropertyName">
            <summary>
            Returns the SVN property/app setting name that stores the connection URL
            </summary>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssuesService.Connect(System.String,System.String,System.String,System.Converter{System.String,System.String},JiraGit.Common.Interfaces.IIssuesServiceConnection@)">
            <summary> 
            Open the connection to the issue tracking system with the given credentials. 
            If the logon was successful the return value should be true.  If the credentials are
            invalid the return value should be false.  All other failures should result in an
            excpetion.
            </summary>
            <param name="url"> A Uri describing the connection information required </param>
            <param name="userName"> The current user name to use for logon </param>
            <param name="password"> The current password to use for logon </param>
            <param name="settings"> The method used to retrive app.config settings </param>
            <param name="connection"> The resulting connection with the issue tracking server </param>
            <returns> True if the logon was successful, or false if the credentials are invalid </returns>
        </member>
        <member name="T:JiraGit.Common.Interfaces.IIssuesServiceConnection">
            <summary>
            Wraps an established connection to an issue tracking system
            </summary>
        </member>
        <member name="P:JiraGit.Common.Interfaces.IIssuesServiceConnection.CurrentUser">
            <summary> Returns the current user </summary>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssuesServiceConnection.GetFilters">
            <summary>
            Retrieves a list of filters/groups of issues that can be retrieved from the server.
            </summary>
        </member>
        <member name="M:JiraGit.Common.Interfaces.IIssuesServiceConnection.GetUsers">
            <summary>
            Returns all known users in the system, throwing NotSupportedException or NotImplementedExcpetion
            will cause the system to track unique users seen.
            </summary>
        </member>
        <member name="T:JiraGit.Common.Interfaces.IIssueState">
            <summary>
            Represents the current state of an issue (ie. Open, Closed, Resolved, etc.)
            </summary>
        </member>
        <member name="T:JiraGit.Common.Interfaces.IIssueUser">
            <summary>
            Represents a user of the issue tracking system, used to identify who reported the issue and 
            to whom the issue is currently assigned.  Also used to transfer ownership of an issue.
            </summary>
        </member>
    </members>
</doc>
